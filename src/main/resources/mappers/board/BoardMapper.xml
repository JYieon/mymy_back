<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.trip.mymy.mybatis.BoardMapper">
	<resultMap type="com.trip.mymy.dto.BoardDTO"
		id="BOARD_TB">
		<id property="boardNo" column="BOARD_NO_PK" />
		<result property="id" column="MEMBER_ID_PK" />
		<result property="title" column="BOARD_TITLE" />
		<result property="content" column="BOARD_CONTENT" />
		<result property="date" column="BOARD_DT"
			javaType="java.sql.Timestamp" />
		<result property="boardOpen" column="BOARD_OPEN" />
		<result property="boardCategory" column="BOARD_CATEGORY" />
		<result property="boardCnt" column="BOARD_CNT" />
		<result property="boardLikes" column="BOARD_LIKES" />
	</resultMap>
	
    <resultMap id="REPLY_TB" type="com.trip.mymy.dto.BoardRepDTO">
    	<id property="repNo" column="REPLY_NO_PK" />
    	<result property="id" column="MEMBER_ID_PK" />
    	<result property="boardNo" column="BOARD_NO_PK" />
    	<result property="repContent" column="REPLY_CONTENT" />
    	<result property="parentNo" column="PARENT_NO" />
    	<result property="repDate" column="REPLY_DT" javaType="java.sql.Timestamp" />
    </resultMap>
	
	<!-- 댓글 저장 -->
<insert id="addReply">
    insert into REPLY_TB(REPLY_NO_PK, MEMBER_ID_PK, BOARD_NO_PK, REPLY_CONTENT, PARENT_NO, REPLY_DT)
    values (REPLY_TB_SEQ.NEXTVAL, 'a', #{boardNo}, #{repContent}, #{parentNo}, sysdate)
</insert>


	<!-- PARENT_NO(부모 댓글)가 존재하는지 확인 -->
<select id="checkParentExists" resultType="int">
    SELECT COUNT(*) FROM REPLY_TB WHERE REPLY_NO_PK = #{parentNo}
</select>
	
<!-- 댓글 불러오기 (부모-자식 관계 정렬) -->
<select id="getRepData" resultMap="REPLY_TB">
    SELECT BOARD_NO_PK, REPLY_NO_PK, MEMBER_ID_PK, REPLY_CONTENT, PARENT_NO, REPLY_DT
    FROM REPLY_TB
    WHERE BOARD_NO_PK = #{boardNo}
    ORDER BY 
        CASE 
            WHEN PARENT_NO = 0 THEN REPLY_NO_PK  -- 부모 댓글 우선 정렬
            ELSE PARENT_NO  -- 부모 댓글 아래에 배치
        END,
        REPLY_NO_PK -- 부모 댓글 내에서 정렬
</select>
	<!-- 댓글 삭제 (대댓글도 함께 삭제) -->
    <delete id="deleteReply">
        delete from REPLY_TB where REPLY_NO_PK = #{replyNo} or PARENT_NO = #{replyNo}
    </delete>
    
<!-- 게시글 저장 -->
	<insert id="writeSave" parameterType="com.trip.mymy.dto.BoardDTO">
    <selectKey keyProperty="boardNo" resultType="int" order="AFTER">
        SELECT BOARD_TB_SEQ.CURRVAL FROM DUAL
    </selectKey>
    
    insert into BOARD_TB (BOARD_NO_PK, MEMBER_ID_PK, BOARD_TITLE, BOARD_CONTENT, BOARD_DT, BOARD_OPEN, BOARD_CATEGORY)
    values (BOARD_TB_SEQ.nextval, #{id}, #{title}, #{content}, sysdate, #{boardOpen}, #{boardCategory})
</insert>

<!-- 게시글 목록 조회 -->
	<select id="getBoardList" resultMap="BOARD_TB">
       SELECT * FROM BOARD_TB 
    ORDER BY BOARD_NO_PK DESC
    OFFSET #{offset} ROWS FETCH NEXT #{limit} ROWS ONLY
</select>

<!-- 게시글 상세 조회-->
<select id="getPost" parameterType="int" resultMap="BOARD_TB">
    SELECT BOARD_NO_PK, MEMBER_ID_PK, BOARD_TITLE, 
           REPLACE(BOARD_CONTENT, ',', ',\n') AS BOARD_CONTENT,
           BOARD_DT, BOARD_OPEN, BOARD_CATEGORY, BOARD_CNT
    FROM BOARD_TB
    WHERE BOARD_NO_PK = #{boardNo}
</select>

<!-- 게시글 조회수-->
<update id="boardCnt">
UPDATE BOARD_TB SET  BOARD_CNT= BOARD_CNT+1 WHERE BOARD_NO_PK = #{boardNo}
</update>

<!-- 총 게시글 수-->
<select id="getTotalPosts" resultType="int">
    SELECT COUNT(*) FROM BOARD_TB
</select>

<!--  게시글 수정 -->
<update id="modify">
update BOARD_TB set BOARD_TITLE=#{title}, BOARD_CONTENT=#{content} where BOARD_NO_PK=#{boardNo}
</update>

<!--  게시글 삭제 -->
<delete id="delete">
		delete from BOARD_TB where BOARD_NO_PK=#{boardNo}
</delete>
    
    
<!-- 좋아요 수 증가 -->
<update id="increaseLike">
    update BOARD_TB 
    set BOARD_LIKES = BOARD_LIKES + 1 
    where BOARD_NO_PK = #{boardNo}
</update>

<!-- 좋아요 수 감소 -->
<update id="decreaseLike">
    update BOARD_TB 
    set BOARD_LIKES = BOARD_LIKES - 1 
    where BOARD_NO_PK = #{boardNo} and BOARD_LIKES > 0
</update>

<!-- 특정 게시글의 좋아요 수 조회 -->
<select id="getLikes" resultType="int">
    select BOARD_LIKES from BOARD_TB where BOARD_NO_PK = #{boardNo}
</select>
</mapper>